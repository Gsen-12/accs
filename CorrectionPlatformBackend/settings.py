"""
Django settings for CorrectionPlatformBackend project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from datetime import datetime, timedelta
from pathlib import Path

from seafileapi import SeafileAPI

# import sys
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-l(p6l6(s+lf1r4p^7#b=w7-x06(s@@k&ni1$8rms!3y*ev^7+('

DIFY_API_KEY = "app-11Fj3lplB04apHgxWmuDxP1V"  # Dify钥匙

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = ['192.168.101.46','127.0.0.1']

# Application definition

# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#
# 允许最大100MB内存文件上传
DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100MB
# 允许最大100MB非内存文件上传
FILE_UPLOAD_MAX_MEMORY_SIZE = 104857600

# if 'cgi' not in sys.modules:
#     import legacy_cgi as cgi
#     sys.modules['cgi'] = cgi
APPEND_SLASH = False

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    # 'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'accs.apps.AccsConfig',
    'captcha',
    # 'echartsApp.apps.EchartsConfig',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'accs.utils.middleware.CloseCsrfMiddleware'
]

CORS_ALLOWED_ORIGINS = ['http://192.168.101.57:5666',
                        "http://127.0.0.1:5666",
                        'http://192.168.101.69:3000',
                        'http://192.168.101.40']

CORS_ALLOW_CREDENTIALS = True  # 允许携带cookie

# CSRF_FAILURE_VIEW = 'accs.views.csrf_failure'

ROOT_URLCONF = 'CorrectionPlatformBackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CorrectionPlatformBackend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

'''DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}'''
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "ACCS",
        "USER": "root",
        "PASSWORD": "123456",
        "HOST": "127.0.0.1",
        "PORT": "3306",
        "CHARSET": "utf8mb4",
    },

}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'accs.authentication.CustomJWTAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
        'rest_framework.permissions.IsAuthenticated',
    ]
}

ROLE_IDS = {
    'tea': 0,
    'stu': 1
}

# JWT_AUTH = {
#     # token有效期为24小时
#     'JWT_EXPIRATION_DELTA': datetime.timedelta(days=1),
# }

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),  # 默认值
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
}

# # 跨域支持
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",
#     "http://127.0.0.1:3000"
# ]

MIDDLEWARE.insert(0, 'corsheaders.middleware.CorsMiddleware')

CACHES = {
    'default': {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://@127.0.0.1:6379/1",
        "KEY_PREFIX": "cache",  # 追加前缀双重保险
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    "token": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://@127.0.0.1:6379/2",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            # "PASSWORD": "123456"
            "SOCKET_CONNECT_TIMEOUT": 5,
            "SOCKET_TIMEOUT": 5,
        },
        "KEY_PREFIX": "jwt_"
    },
    "invitation": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://@127.0.0.1:6379/3",
        "OPTIONS": {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }

    },
    "file": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://@127.0.0.1:6379/4",
        "OPTIONS": {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }

    }
}

AUTHENTICATION_BACKENDS = (
    'accs.views.MyCustomBackend',
    'django.contrib.auth.backends.ModelBackend',
)
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[{asctime}] {levelname} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'accs/role_audit.log'),
            'when': 'midnight',
            'backupCount': 30,
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'role_audit': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    }
}
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

TEMP_AVATAR_DIR = 'tmp/avatars'
FINAL_AVATAR_DIR = 'avatars'
AVATAR_ROLLBACK_TTL = 86400  # 回滚有效期24小时

TEMP_FILE_DIR = 'tmp/files'  # 临时存储目录
FINAL_FILE_DIR = 'files'  # 正式存储目录
FILE_ROLLBACK_TTL = 86400  # 文件回滚有效期(24小时)
MAX_FILE_SIZE = 104857600  # 100MB文件大小限制
ALLOWED_FILE_TYPES = ['pdf', 'docx', 'xlsx', "py"]  # 允许的文件类型

DIFY_UPLOAD_URL = "https://192.168.101.69/v1/chat-messages"

# SEAFILE_CONFIG = {
#     'API_BASE': 'https://seafile.accs.rabbitmind.net',  # Seafile服务地址
#     'API_TOKEN': 'b9493568a48c5d8c6bcf3fe83d89eefd9177d257',         # 管理员API令牌
#     'AVATAR_REPO_ID': 'ad457d57-2577-4686-89b7-4f69c8a5195c',       # 专门存储头像的文件库ID
#     'UPLOAD_URL': '/api2/repos/{repo_id}/upload-link/',
#     'FILE_URL_TEMPLATE': '{repo_id}/files?p=/{file_path}',  # 需在代码中传入实际 repo_id
#     # 'AVATAR_DIR' : '/ava'  # 存储目录
# }

SEAFILE_CONFIG = {
    'API_BASE': 'https://seafile.accs.rabbitmind.net',
    'AVATAR_REPO_ID': 'ad406967-dd0d-4d5c-949c-cdd62d21b9fe',
    'UPLOAD_DIR': '/用户头像'  # 新增标准化存储目录
}

# 新增Seafile配置
server_url = "https://seafile.accs.rabbitmind.net/"
login_name = "accs@admin.com"
pwd = "accs@Aa"
repo_id = "ad406967-dd0d-4d5c-949c-cdd62d21b9fe"
