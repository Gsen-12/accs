class FileUploadView(APIView):
    """
    接收文件并将返回结果写入 pandas 表格，上传至 Seafile。
    """

    def post(self, request):
        user_file = request.FILES.get('file')
        if not user_file:
            return Response({'detail': '未上传文件'}, status=status.HTTP_400_BAD_REQUEST)

        # 2. 查询最新一条存库的分析结果
        # 假设按 user 和 timestamp 排序取最新
        user = request.user if request.user.is_authenticated else None
        print('user:', user)
        queryset = AnalysisResult.objects
        print('queryset:', queryset)
        if user:
            queryset = queryset.filter(user=user)
        result_obj = queryset.order_by('-timestamp').first()
        print('result_obj:', result_obj)
        if not result_obj:
            return Response({'detail': '未找到分析结果'}, status=status.HTTP_404_NOT_FOUND)

        # 3. 将结果字段存入 DataFrame
        data = {
            'vulnerabilities': result_obj.vulnerabilities,
            'errors': result_obj.errors,
            'code_smells': result_obj.code_smells,
            'accepted_issues': result_obj.accepted_issues,
            'duplicates': result_obj.duplicates,
            'type': result_obj.type if isinstance(result_obj.type, str) else ', '.join(result_obj.type),
            'severity': result_obj.severity,
            'user': result_obj.id
        }

        df = pd.DataFrame([data])
        print('df:', df)

        # 4. 写入 Excel
        timestamp = datetime.datetime.now().strftime('%Y-%m-%d %H:%M')
        table_filename = f"{timestamp}_analysis_result.xlsx"
        temp_dir = tempfile.mkdtemp()
        table_path = os.path.join(temp_dir, table_filename)
        try:
            df.to_excel(table_path, index=False)
        except Exception as e:
            return Response({'detail': f'生成表格失败：{str(e)}'}, status=status.HTTP_500_INTERNAL_SERVER_ERROR)

        # 1) 使用 pandas 创建 DataFrame，把返回 JSON 放入第一格
        df = pd.DataFrame([[data]], columns=['hhh'])
        table_filename = f"{timestamp}_upload_result.xlsx"
        table_path = os.path.join(temp_dir, table_filename)
        df.to_excel(table_path, index=False)

        try:
            # 2) 上传表格到 Seafile
            seafile_api = SeafileAPI(login_name, pwd, server_url)
            seafile_api.auth()
            repo = seafile_api.get_repo(repo_id)

            # 上传表格文件
            repo.upload_file('/result', table_path)

            # 构造访问 URL
            base = f"{server_url.rstrip('/')}"
            table_url = f"{base}/{repo_id}/result/{table_filename}"

            return Response({
                'table_file_url': table_url,
            }, status=status.HTTP_201_CREATED)

        except Exception as e:
            return Response({'detail': f'Seafile 上传失败：{str(e)}'}, status=status.HTTP_500_INTERNAL_SERVER_ERROR)

        finally:
            # 清理本地临时目录
            try:
                os.remove(table_path)
                os.rmdir(temp_dir)
            except:
                pass